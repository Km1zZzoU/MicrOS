libc_bin 			= $(dist_dir)/libc.a
libc_objs_dir    	= $(build_dir)/obj/libc

# libc specific source files:
libc_c_files       += $(shell find $(libc_src_dir) -name "*.c")
libc_c_files       += $(shell find $(external_dir)/libc -name "*.c")
libc_asm_files     += $(shell find $(libc_src_dir) -name "*.asm")
libc_asm_files     += $(shell find $(external_dir)/libc -name "*.asm")

# libc: object files
libc_c_objects     = $(patsubst %.c, $(libc_objs_dir)/%.o, $(libc_c_files))
libc_asm_objects   = $(patsubst %.asm, $(libc_objs_dir)/%.o, $(libc_asm_files))
libc_extra_objects =
# external dependencies
libc_external_deps = 
libc_external_dirs = $(addprefix $(external_dir)/libc/,$(external_deps))

# libc flags
libc_INCLUDES  += -I$(include_dir)/libc 
libc_ASM_FLAGS += -f elf32 
libc_CFLAGS    += -ffreestanding
libc_CFLAGS    += $(WERRORS) 
libc_CFLAGS    += $(LIBC_CONFIG) 

libc_deps = $(libc_c_objects:%.o=%.d)
libc_deps += $(libc_extra_objects:%.o=%.d)

-include $(libc_deps)

# libc
$(libc_asm_objects): $(libc_objs_dir)/%.o: %.asm
	$(progress) "ASM" $<
	$(MKDIR) -p $(@D)
	$(ASM) $(libc_ASM_FLAGS) $< -o $@

$(libc_c_objects): $(libc_objs_dir)/%.o: %.c
	$(progress) "CC" $<
	$(MKDIR) -p $(@D)
	$(CC) -MMD -MF $(@:.o=.d) $(libc_INCLUDES) $(libc_CFLAGS) -c $< -o $@ 

$(libc_bin): $(header_files) $(libc_c_objects) $(libc_asm_objects)
	$(progress) "AR" $@
	$(MKDIR) -p $(@D)
	$(AR) rcs $@ $(libc_c_objects) $(libc_asm_objects)
