b_pxe_src_dir			= $(bootloader_src_dir)/pxe
b_pxe_objs_dir			= $(build_dir)/obj/bootloader/pxe
b_pxe_bin				= $(build_dir)/pxe.0
b_pxe_elf				= $(build_dir)/pxe.elf

b_pxe_ld_script			= $(b_pxe_src_dir)/linker.ld

b_pxe_c_files			+= $(patsubst $(b_pxe_src_dir)/%, %,$(shell find $(b_pxe_src_dir) -name "*.c"))
b_pxe_asm_files			+= $(patsubst $(b_pxe_src_dir)/%, %,$(shell find $(b_pxe_src_dir) -name "*.asm"))

b_pxe_c_objects    		= $(patsubst %.c, $(b_pxe_objs_dir)/%.o, $(b_pxe_c_files))
b_pxe_asm_objects  		= $(patsubst %.asm, $(b_pxe_objs_dir)/%.o, $(b_pxe_asm_files))

b_pxe_ASM_FLAGS 		+= -F dwarf -g -f elf32
b_pxe_C_FLAGS 			+= -ffreestanding -ggdb -g -O0

b_pxe_deps				= $(b_pxe_c_objects:%.o=%.d)
-include $(b_pxe_deps)

$(b_pxe_asm_objects): $(b_pxe_objs_dir)/%.o: $(b_pxe_src_dir)/%.asm
	$(progress) "ASM" $<
	$(MKDIR) -p $(@D)
	$(ASM) $(b_pxe_ASM_FLAGS) $< -o $@

$(b_pxe_c_objects): $(b_pxe_objs_dir)/%.o:  $(b_pxe_src_dir)/%.c
	$(progress) "CC" $<
	$(MKDIR) -p $(@D)
	$(CC) $(b_pxe_C_FLAGS) -c $< -o $@ 

$(b_pxe_bin): $(b_pxe_elf)
	$(progress) "OBJCOPY" $@
	$(MKDIR) -p $(@D)
	$(OBJCOPY) -O binary $< $@ 	

$(b_pxe_elf): $(b_pxe_asm_objects) $(b_pxe_c_objects) 
	$(progress) "LD" $@
	$(MKDIR) -p $(@D)
	$(LD) -T $(b_pxe_ld_script) $(b_pxe_asm_objects) $(b_pxe_c_objects) -o $@ 

bootloaderpxe: $(b_pxe_bin)
.PHONY: bootloaderpxe 

clean-bootloaderpxe: ## clean b_pxe
clean-bootloaderpxe:
	$(progress) "CLEAN" "b_pxe"
	rm -rf $(b_pxe_objs_dir)
	rm -rf $(b_pxe_elf)
	rm -rf $(b_pxe_bin)
.PHONY: clean-bootloaderpxe