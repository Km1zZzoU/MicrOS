libk_bin 			= $(dist_dir)/libk.a
libk_objs_dir    	= $(build_dir)/obj/libk

# libk specific source files:
libk_c_files       += $(shell find $(libk_src_dir) -name "*.c")
libk_c_files       += $(shell find $(external_dir)/libk -name "*.c")
libk_asm_files     += $(shell find $(libk_src_dir) -name "*.asm")
libk_asm_files     += $(shell find $(external_dir)/libk -name "*.asm")
# define dependencies from stdlib:
libk_c_files       += $(shell find $(libc_src_dir)/stdio -name "*.c")
libk_c_files       += $(shell find $(libc_src_dir)/ctype -name "*.c")
libk_c_files       += $(shell find $(libc_src_dir)/string -name "*.c")
libk_c_files       += $(shell find $(libc_src_dir)/stdlib -name "*.c")
libk_c_files       += $(shell find $(libc_src_dir)/micros -name "*.c")
libk_c_files       += $(shell find $(libc_src_dir)/math -name "*.c")
libk_c_files       += $(shell find $(libc_src_dir)/fenv -name "*.c")
libk_c_files       += $(shell find $(libc_src_dir)/errno -name "*.c")

# libk: object files
libk_c_objects     = $(patsubst %.c, $(libk_objs_dir)/%.o, $(libk_c_files))
libk_asm_objects   = $(patsubst %.asm, $(libk_objs_dir)/%.o, $(libk_asm_files))
libk_extra_objects =
# external dependencies
libk_external_deps = 
libk_external_dirs = $(addprefix $(external_dir)/libk/,$(external_deps))

# libk flags
LIBK_INCLUDES  += -I$(include_dir)/libc 
LIBK_INCLUDES  += -I$(include_dir)/libk
LIBK_INCLUDES  += -I$(include_dir)/kernel
LIBK_ASM_FLAGS += -f elf32 
LIBK_CFLAGS    += -ffreestanding
LIBK_CFLAGS    += $(WERRORS) 
LIBK_CFLAGS    += $(LIBK_CONFIG) 

libk_deps = $(libk_c_objects:%.o=%.d)
libk_deps += $(libk_extra_objects:%.o=%.d)

-include $(libk_deps)

# libk
$(libk_asm_objects): $(libk_objs_dir)/%.o: %.asm
	$(progress) "ASM" $<
	$(MKDIR) -p $(@D)
	$(ASM) $(LIBK_ASM_FLAGS) $< -o $@

$(libk_c_objects): $(libk_objs_dir)/%.o: %.c
	$(progress) "CC" $<
	$(MKDIR) -p $(@D)
	$(CC) -MMD -MF $(@:.o=.d) -D__libk=1 $(LIBK_INCLUDES) $(LIBK_CFLAGS) -c $< -o $@ 

$(libk_bin): $(header_files) $(libk_c_objects) $(libk_asm_objects)
	$(progress) "AR" $@
	$(MKDIR) -p $(@D)
	$(AR) rcs $@ $(libk_c_objects) $(libk_asm_objects)
